// 4.18.0 0x9ef7cb81
// Generated by imageconverter. Please, do not edit!

#include <BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_bnc_80x80_fb[]; // BITMAP_BNC_80X80_FB_ID = 0, Size: 80x80 pixels
extern const unsigned char image_bnc_80x80_s[]; // BITMAP_BNC_80X80_S_ID = 1, Size: 80x80 pixels
extern const unsigned char image_clock20_72x72[]; // BITMAP_CLOCK20_72X72_ID = 2, Size: 72x72 pixels
extern const unsigned char image_clock20_80x80_i[]; // BITMAP_CLOCK20_80X80_I_ID = 3, Size: 90x90 pixels
extern const unsigned char image_clock22_80x80_i[]; // BITMAP_CLOCK22_80X80_I_ID = 4, Size: 90x90 pixels
extern const unsigned char image_clock240_80x80_i[]; // BITMAP_CLOCK240_80X80_I_ID = 5, Size: 90x90 pixels
extern const unsigned char image_clock245_80x80_i[]; // BITMAP_CLOCK245_80X80_I_ID = 6, Size: 90x90 pixels
extern const unsigned char image_clockext_80x80_i[]; // BITMAP_CLOCKEXT_80X80_I_ID = 7, Size: 90x90 pixels
extern const unsigned char image_clockint_80x80_i[]; // BITMAP_CLOCKINT_80X80_I_ID = 8, Size: 90x90 pixels
extern const unsigned char image_display[]; // BITMAP_DISPLAY_ID = 9, Size: 72x72 pixels
extern const unsigned char image_goback[]; // BITMAP_GOBACK_ID = 10, Size: 80x80 pixels
extern const unsigned char image_hdmi_80x80_fb[]; // BITMAP_HDMI_80X80_FB_ID = 11, Size: 80x80 pixels
extern const unsigned char image_hdmi_80x80_s[]; // BITMAP_HDMI_80X80_S_ID = 12, Size: 80x80 pixels
extern const unsigned char image_off_44x44[]; // BITMAP_OFF_44X44_ID = 13, Size: 44x44 pixels
extern const unsigned char image_offcore_72x72[]; // BITMAP_OFFCORE_72X72_ID = 14, Size: 72x72 pixels
extern const unsigned char image_on_44x44[]; // BITMAP_ON_44X44_ID = 15, Size: 44x44 pixels
extern const unsigned char image_rca_80x80_fb[]; // BITMAP_RCA_80X80_FB_ID = 16, Size: 80x80 pixels
extern const unsigned char image_rca_80x80_s[]; // BITMAP_RCA_80X80_S_ID = 17, Size: 80x80 pixels
extern const unsigned char image_settings[]; // BITMAP_SETTINGS_ID = 18, Size: 72x72 pixels
extern const unsigned char image_slider_930[]; // BITMAP_SLIDER_930_ID = 19, Size: 930x15 pixels
extern const unsigned char image_xlr_80x80_fb[]; // BITMAP_XLR_80X80_FB_ID = 20, Size: 80x80 pixels
extern const unsigned char image_xlr_80x80_s[]; // BITMAP_XLR_80X80_S_ID = 21, Size: 80x80 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_bnc_80x80_fb, 0, 80, 80, 61, 36, 10, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 8, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_bnc_80x80_s, 0, 80, 80, 63, 34, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 11, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock20_72x72, 0, 72, 72, 67, 0, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 72, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock20_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock22_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock240_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clock245_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clockext_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_clockint_80x80_i, 0, 90, 90, 84, 0, 6, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 90, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_display, 0, 72, 72, 6, 47, 56, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 11, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_goback, 0, 80, 80, 41, 26, 13, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 27, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hdmi_80x80_fb, 0, 80, 80, 5, 18, 70, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_hdmi_80x80_s, 0, 80, 80, 1, 18, 78, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 9, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_off_44x44, 0, 44, 44, 7, 7, 30, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 31, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_offcore_72x72, 0, 72, 72, 15, 63, 42, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 1, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_on_44x44, 0, 44, 44, 6, 8, 32, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 30, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rca_80x80_fb, 0, 80, 80, 61, 29, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 21, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_rca_80x80_s, 0, 80, 80, 63, 27, 5, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 26, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_settings, 0, 72, 72, 34, 34, 4, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 25, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_slider_930, 0, 930, 15, 7, 1, 916, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 12, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_xlr_80x80_fb, 0, 80, 80, 24, 16, 39, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 20, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 },
    { image_xlr_80x80_s, 0, 80, 80, 19, 13, 46, ((uint8_t)touchgfx::Bitmap::ARGB8888) >> 3, 23, ((uint8_t)touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
